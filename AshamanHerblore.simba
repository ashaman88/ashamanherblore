///////////////////////////////////////////////////////////////////////
//                                                                   //
//          READ THE DIRECTIONS IN THE OP FIRST OR ELSE              //
//           Make sure you have setup your player file               //
//                  Under SRL>PlayerManager                          //
//                       Press Play                                  //
//                                                                   //
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
Program AshamanHerblore;

  {$DEFINE SMART}
  {$I SRL-6/SRL.Simba}
  {$i srl-6/lib/misc/srlplayerform.simba}

Var
  ItemCount,XP,StartingExperience,Slot,StartingXP,ItemsPH,XPH,Bir,Bfr,Stacks,StackCheck: Integer;
  ItemType, TypeEdit: String;
  Timeout,CurrentBTime: TTimeMarker;
  W,X,Y,Z,RealBTime,BreakRounds,TotalBreaks,AntiB,MouseB: Integer;
  debug, normalBank: Boolean;

Const
  ScriptVersion = '2.1';

procedure declarePlayers();
var
  i,j: integer;
begin
  players.setup(playerForm.playerNames, playerForm.playerFile); // load the SPF players from the SRL Player Manager
  currentPlayer := 0;                                           // player to use first

  // set player attributes based on the settings from the form
  for i := 0 to high(players) do
    with players[i] do
    begin
      // convert the integers
      integers[0] := strToInt(playerForm.players[i].settings[1]);  //minutes until break
      integers[1] := strToInt(playerForm.players[i].settings[2]);  //minutes to break

      for j := 0 to high(playerForm.comboBoxItems[1]) do
        if (playerForm.players[i].settings[10] = playerForm.comboBoxItems[1][j]) then
          integers[2] := j;                                                  //bankinglocation

      Stacks := strToInt(playerForm.players[i].settings[4]);  //number of stacks
      World :=  strToInt(playerForm.players[i].settings[3]);                    //world
      ismember:=true;

      if (playerForm.players[i].settings[11] = 'Normal') then
        normalBank := true;

      if not normalBank then
        for j := 0 to high(playerForm.comboBoxItems[2]) do                            //quickload
          if (playerForm.players[i].settings[11] = playerForm.comboBoxItems[2][j]) then
            integers[4] := j+2;

      // booleans
      booleans[0] := strToBool(playerForm.players[i].settings[5]);
      booleans[1] := strToBool(playerForm.players[i].settings[6]);
      FindMod := strToBool(playerForm.players[i].settings[7]);
      debug := strToBool(playerForm.players[i].settings[8]);

      // any other data types you've decided to use
      strings[0] := playerForm.players[i].settings[0]; //quickkey
      strings[1] := playerForm.players[i].settings[9]; //cleanorpots
    end;
end;

// initiates the SRL player form (you aren't restricted to the procedure name; it can be whatever you want)
procedure initPlayerForm();
begin
  with playerForm do
  begin
    name := 'AshamanHerblore v'+toStr(ScriptVersion); // the title of the SPF, usually the name of your script
    scriptHelpThread := '';           // a link to a help thread, if set to '' will link to my setup guide
    scriptSettingsPath := '';         // where you want the settings file to be saved; saved in script's path by default

    editBoxLabels := ['QuickKey', 'Minutes until Break', '# of Minutes to Break', 'World','#ofStacks']; // edit boxes are created for each array element
    editBoxDefaults := [ '0', '600', '15','0', '1'];                                             // optional default values for each edit box; array length must equal editBoxLabel length
    checkBoxLabels := ['Take Breaks', 'Switch Worlds (After Break)', 'Logout if Mod is near', 'Debug'];        // same as editBoxLabels but for check boxes
    checkBoxDefaults := ['True','True','True', 'False'];

    comboBoxLabels := ['CleanOrPots','Location','QuickLoad'];                                                // same as editBoxLabels but for combo boxes (drop down boxes)
    comboBoxDefaults := ['Clean','BANK_NPC_BLUE','Normal'];

    // this needs to be done for every element in the comboBoxLabels array
    setLength(comboBoxItems, length(comboBoxLabels));
    comboBoxItems[0] := ['Clean', 'Pots'];       // all the options available for the first combo box
    comboBoxItems[1] := ['BANK_NPC_BLUE', 'BANK_NPC_GREY', 'BANK_NPC_GREEN', 'BANK_NPC_DRAYNOR', 'BANK_NPC_ROGUES_DEN', 'BANK_BOOTH', 'BANK_CHEST_SW', 'BANK_CHEST_SHANTAY', 'BANK_CHEST_DUEL', 'BANK_CHEST_CW', 'BANK_CHEST_GROTTO', 'BANK_CHEST_BURTHORPE'];       // all the options available for the first combo box
    comboBoxItems[2] := ['Normal', 'PRESET_1', 'PRESET_2'];
  end;
end;

procedure debugSPFSettings();
var
  i: integer;
begin
  writeln('');
  writeln('Player file: ', playerForm.playerFile);

  for i := 0 to high(players) do
  begin
    writeln('QuickKey:          ', players[i].strings[0]);
    writeln('Minutes until Break:            ', players[i].integers[0]);
    writeln('# of Minutes to Break: ', players[i].integers[1]);
    writeln('Take Breaks:        ', players[i].booleans[0]);
    writeln('Switch Worlds (After Break):        ', players[i].booleans[1]);
    writeln('Logout if Mod is near:        ', players[i].findmod);
    writeln('CleanOrPots:        ', players[i].strings[1]);
    writeln('Location:        ', players[i].integers[2]);
    writeln('');
  end;
end;

(*
TRSChatbox.getXP
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSChatbox.getXP(): integer;

Returns the amount of xp per the xp tracker in the top right corner of chatbox.

.. note::

    - by Ashaman88
    - Last Updated: 01 January 2013 by Ashaman88

Example:

.. code-block:: pascal

    xp:= chatbox.getXP;
    writeln('Starting with ' + toStr(xp) + ' XP.');
*)
function TRSChatBox.getXP(): integer;
var
  b: TBox;
  s: String;
  tpa : TPointArray;
  atpa : T2DPointArray;
  i,p: Integer;
begin
  b := self.getBounds();
  b.edit(+(b.x2-b.x1)-140, +10, -5, -94);

  findColorsTolerance(tpa, 14013909, b, 4,colorSetting(2, 0.00, 0.00));

  if length(tpa) < 2 then
  begin
    print('chatBox.getXP(): No XP found', TDebug.SUB);
    Exit;
  end;

  atpa := tpa.cluster(5);

  b:= atpa.getbounds();
  b.edit(-2,-2,+2,+3);

  s:=Replace(tesseractgettext(b.x1,b.y1,b.x2,b.y2, FILTER_SMALL_CHARS), ' ', '', [rfReplaceAll]);

  p := Pos('x', S);
  if p > 0 then
    Result := StrToIntDef(ExtractFromStr(Copy(s, p, Length(S)), Numbers), 0)
  else
    Result := StrToIntDef(ExtractFromStr(s, Numbers), 0);

  print('chatBox.getXP(): XP found: ' + tostr(result), TDebug.SUB);
end;

{*******************************************************************************
Function AutoupdateMe;
By: Shuttleu
Edited By: Ashaman88
Description: Autoupdates Script.
*******************************************************************************}
Procedure AutoUpdateMe;
Var
  Neifile: Integer;
  OnlineVersion, NewScript, NeiFeilNennen: String;
Begin
  Writeln('Checking for script updates...');
  OnlineVersion := GetPage('http://ashamanherblore.googlecode.com/git/Version.txt');
  Writeln('Online Version: '+ToStr(OnlineVersion));
  Writeln('Local Version: '+ToStr(ScriptVersion));
  If (trim(OnlineVersion) > ScriptVersion) Then
  Begin
    WriteLn('Newer script version online!');
    WriteLn('Autoupdating to newer version.');
    NewScript := GetPage('http://ashamanherblore.googlecode.com/git/AshamanHerblore.simba');
    NeiFeilNennen := ScriptPath+ 'AshamanHerblore V'+OnlineVersion+'.simba';
    Neifile := Rewritefile(NeiFeilNennen, true);
    Try
      WriteFileString(Neifile, NewScript);
    Except
      Begin
        WriteLn('Fatal error writing to '+NeiFeilNennen+'!!');
        Terminatescript;
      End;
    End;
    CloseFile(Neifile);
    WriteLn('New script downloaded to '+NeiFeilNennen+'!! Please use this one!!');
    TerminateScript;
  End Else
    WriteLn('You have the latest version of the script!');
End;

(*
TRSChatbox.getXP
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSChatbox.getXP(): integer;

Initiates the chatbox variable.

.. note::

    - by Ashaman88
    - Last Updated: 01 January 2013 by Ashaman88

Example:

.. code-block:: pascal

    xp:= chatbox.getXP;
    writeln('Starting with ' + toStr(xp) + ' XP.');
*)
{function TRSChatBox.getXP(): integer;
var
  b: TBox;
  s: String;
  tpa : TPointArray;
  atpa : T2DPointArray;
  i,p: Integer;
begin
  b := self.getBounds();
  b.edit(+(b.x2-b.x1)-140, +10, -5, -94);

  findColorsTolerance(tpa, 14013909, b, 4,colorSetting(2, 0.00, 0.00));

  if length(tpa) < 2 then
  begin
    print('chatBox.getXP(): No XP found', TDebug.SUB);
    Exit;
  end;

  atpa := tpa.cluster(5);

  b:= atpa.getbounds;
  b.edit(-2,-2,+2,+3);

  s:=Replace(tesseractgettext(b.x1,b.y1,b.x2,b.y2, FILTER_SMALL_CHARS), ' ', '', [rfReplaceAll]);

  p := Pos('x', S);
  if p > 0 then
    Result := StrToIntDef(ExtractFromStr(Copy(s, p, Length(S)), Numbers), 0)
  else
    Result := StrToIntDef(ExtractFromStr(s, Numbers), 0);

  print('chatBox.getXP(): XP found: ' + tostr(result), TDebug.SUB);
end;     }

Procedure FindNormalRandoms;
Begin
  ExitSquealOfFortune;
  ClaimSpinTicket;
End;

Function Antiban: Boolean;
Var
  I: Integer;
Begin
  I := Random(600);
  Case I Of
    1: boredHuman(false);
    2..7:
      Begin
        hoverSkill(Skill_Herblore);
        Wait(GaussRangeInt(1000,2000));
      End;
    8..50: mouseMovingObject;
    51..100: SleepAndMoveMouse(RandomRange(100,MouseB));
    101..400:
      Begin
        MouseOffClient(Random(4));
        Wait(RandomRange(2000, MouseB));
      End;
    501..600: Wait(RandomRange(1000, 2000));

  End;
  Wait(GaussRangeInt(0, AntiB));
End;



Procedure ProgressReport;
Var
  TTB: Integer;
  Method: String;
Begin
  ClearDebug;

  TTB := (((W) + (Y) + BreakRounds)-GetTimeRunning);

  XP := (ChatBox.GetXP - StartingXP);
  XPH := Round(XP * (3600.0 / (GetTimeRunning / 1000.0)));
  ItemsPH := Round((ItemCount * (3600.0 / (GetTimeRunning / 1000.0))));

  Case Lowercase(Players[CurrentPlayer].Strings[1]) Of
    'clean': Method:= 'Cleaned';
    'pots':  Method:= 'Made';
  End;

  writeln('|=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=|');
  writeln('|                  AshamanHerblore v'+PadR(toStr(ScriptVersion), 24), '|');
  writeln('|=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=|');
  writeln(PadR('| Running For: '+TimeRunning, 60)+'|');
  writeln(PadR('| '+ItemType+'''s '+Method+': ' + GroupDigits(ItemCount,','), 40) + padR(Method+'/H: ' + GroupDigits(ItemsPH,','), 20) + '|');
  writeln(PadR('| Exp Earned: ' + GroupDigits(XP,','), 40) + padR('Exp/Hour: ' + GroupDigits(XPH,','), 20) + '|');
  writeln('|___________________________________________________________|');
  writeln('|___________________________________________________________|');

  If Players[CurrentPlayer].Booleans[0] Then
    Writeln('Time until break: '+MsToTime(TTB, Time_Bare));
End;

Function BreakHandler(BreakIn, BreakFor, randBreakIn, randBreakFor: Integer): Boolean;
Var
  H,M,S: Integer;
Begin
  If Not IsLoggedIn Then
    Exit;

  If (GetTimeRunning < ((W) + (Y) + BreakRounds)) Then
    Exit Else
    If (GetTimeRunning > ((W) + (Y) + BreakRounds)) Then
    Begin
      RealBTime := Round((X+Z)/60000);
      Writeln('Taking a break for about ' + IntToStr(RealBTime) + ' minutes.');
      Players[CurrentPlayer].Logout;
      CurrentBTime.Reset;
      CurrentBTime.Start;
      Repeat
        Wait(21000);
        ConvertTime((X+Z)-CurrentBTime.GetTime,H,M,S);
        Writeln('Breaktime left: '+IntToStr(H)+':'+IntToStr(M)+':'+IntToStr(S));
      Until(CurrentBTime.GetTime>(X+Z));
      Writeln('Logging in.');
      If Players[CurrentPlayer].booleans[1] Then
        Players[CurrentPlayer].World := 0;
      Players[CurrentPlayer].Login;
      Wait(4000);
      Timeout.Reset;
      Timeout.Start;
      Result := IsLoggedIn;
      Minimap.SetAngle(MM_DIRECTION_EAST);
      MainScreen.SetAngle(MS_ANGLE_HIGH);
      IncEx(BreakRounds, (W) + (X));
      Inc(TotalBreaks);
      Writeln('The next break will occur in about ' + IntToStr(BreakIn) + ' minutes.');
      W := (BreakIn * 60000);
      X := (BreakFor * 60000);
      Y := RandomRange(-BIR * 60000, BIR * 60000);
      Z := RandomRange(-BFR * 60000, BFR * 60000);
    End;
End;

Function Banking: Boolean;
Var
  T: TTimeMarker;
  Time: Integer;
Begin
  If Not IsLoggedIn Then
    Exit;
  T.Start;
  SRL_Events[EVENT_ANTIBAN] := nil;
  Time:=GaussRangeInt(15000, 24000);
  Repeat
    Wait(Random(100));
    If Bankscreen.Open(Players[CurrentPlayer].Integers[2]) Then
      Break Else
      Begin
        Minimap.SetAngle(MM_DIRECTION_NORTH);
        MainScreen.SetAngle(MS_ANGLE_HIGH);
      End;
    If (T.GetTime>Time) Or (Not IsLoggedIn) Then
      Exit;
  Until (BankScreen.IsOpen Or Pinscreen.IsOpen);

  SRL_Events[EVENT_ANTIBAN] := @Antiban;

  PinScreen.Enter(Players[CurrentPlayer].BankPin);

  if normalBank then
    If BankScreen.GetPackCount > 0 Then
      BankScreen.QuickDeposit(QUICK_DEPOSIT_INVENTORY);

  Case Lowercase(Players[CurrentPlayer].Strings[1]) Of
    'clean':
    Begin
      T.Start;
      Time:=GaussRangeInt(8000, 12000);
      Repeat
        if normalBank then
        begin
          if bankScreen.withdraw(10, WITHDRAW_AMOUNT_ALL, ['']) then
            break;
        end else
          If bankScreen.clickButton(Players[CurrentPlayer].Integers[4]) Then
            Break;
        If (T.GetTime>Time) Or (Not IsLoggedIn) Then
          Exit;
        Wait(GaussRangeInt(0, 1500));
      Until False;
    End;

    'pots':
    Begin
      T.Start;
      Time:=GaussRangeInt(8000, 12000);
      Repeat
        if normalBank then
        begin
          If BankScreen.Withdraw(10, 14, ['']) Then
            Break;
        end else
          If bankScreen.clickButton(Players[CurrentPlayer].Integers[4]) Then
            Break;
        If (T.GetTime>Time) Or (Not IsLoggedIn) Then
          Exit;
        Wait(GaussRangeInt(0, 1500));
      Until False;

      if normalBank then
      begin
        T.Start;
        Time:=GaussRangeInt(8000, 12000);
        Repeat
          If BankScreen.Withdraw(9, 14, ['']) Then
            Break;
          If (T.GetTime>Time) Or (Not IsLoggedIn) Then
            Exit;
          Wait(GaussRangeInt(0, 1500));
        Until False;
      end;
    End;
  End;

  if normalBank then
    BankScreen.Close else
  begin
    t.start;
    Time:=GaussRangeInt(4000, 8000);

    Repeat
      if not bankScreen.__find() then
        Break;
      If (T.GetTime>Time) Or (Not IsLoggedIn) Then
        Exit;
      Wait(GaussRangeInt(0, 200));
    Until False;
  end;


  Case Random(10) Of
    0..7: Slot:=11;
    8..9: Slot:=12;
  End;

  If Lowercase(Players[CurrentPlayer].Strings[1])='pots' Then
  Begin
    Case Random(10) Of
        0..7: Slot:=11;
        8..9: Slot:=12;
      End;

    TabBackpack.MouseSlot(Slot, Mouse_Move);
  End;

  Wait(GaussRangeInt(0, 100));

  T.Start;
  Repeat
    If (TabBackpack.IsItemInSlot(28)) Then
      Break;
    Wait(GaussRangeInt(0, 100));
    If (T.GetTime>8000) Then
    Begin
      If (Stacks>1) And (StackCheck<Stacks) Then
      Begin
        Inc(StackCheck);
        Exit;
      End;
      Writeln('Failed withdrawing, shutting down - took a screenshot, send pic to ashaman (in the logs folder)');
      SaveScreenshot(ScriptPath + timeRunning() + '_' + 'HerbFail.png');
      Players[CurrentPlayer].Logout;
      TerminateScript;
    End;
    If Not IsLoggedIn Then
      Exit;
  Until (TabBackpack.IsItemInSlot(28));


  if chatbox.findTextOnLines(['could not be'], [0]) then
    if countColorTolerance(66033, chatbox.lineBoxes[0], 10) > 100 then
    begin
      writeln('Failed withdrawing, shutting down - took a screenshot, send pic to ashaman (in the scripts folder)');
      saveScreenshot(scriptPath + timeRunning() + '_' + 'HerbFail.png');
      players[currentPlayer].logout;
      terminateScript;
    end;
  Wait(GaussRangeInt(400, 800));
  Result := True;
End;

Function MakeItems: Boolean;
Var
  Time,X,Y, i: Integer;
  T: TTimeMarker;
Begin
  If Not IsLoggedIn Then
    Exit;
  TabBackpack.Open;
  Case Lowercase(Players[CurrentPlayer].Strings[1]) Of
    'clean':
    Begin
      AntiB:= RandomRange(0,500);
      MouseB:= RandomRange(0,3000);

      for i:=0 to 3 do
      begin
        wait(gaussRangeInt(0, 200));
        if debug then
          writeln('Sending quickkey to open menu');

        sendKeys(Players[CurrentPlayer].Strings[0], 60 + Random(60), 60 + Random(60));
        wait(GaussRangeInt(0, 100));

        if debug then
          writeln('Waiting for production or tool menu');

        t.start;
        time := gaussRangeInt(4000, 7000);
        repeat
          wait(gaussRangeInt(0, 100));

          if t.getTime > time then
            break;
        until productionscreen.isOpen or toolscreen.isOpen;

        if productionscreen.isOpen or toolscreen.isOpen then
          break;
      end;

      Wait(GaussRangeInt(0, 200));

      If ItemType = '' Then
      Begin
        ItemType:= Productionscreen.getSelectedBoxText;
        ItemType:= Copy(ItemType, 7, Length(ItemType));
        TypeEdit:= ToStr(ItemType[1]);
        ItemType:= Copy(ItemType, 2, Length(ItemType));
        ItemType:= (Uppercase(TypeEdit)+ItemType);
        ItemType:= Trim(ItemType);
      End;

      If Debug Then
        Writeln('HerbMenu is here');

      Productionscreen.ClickStart;

      If Debug Then
        Writeln('Waiting for StatusMenu');

      SRL_Events[EVENT_ANTIBAN] := nil;
      If Not TabBackpack.waitSlotPixelChange(3,GaussRangeInt(10000, 20000)) Then
      Begin
        SRL_Events[EVENT_ANTIBAN] := @Antiban;
        Exit;
      End;

      SRL_Events[EVENT_ANTIBAN] := @Antiban;

      Wait(GaussRangeInt(0, 1500));

      Timeout.Start;

      If Debug Then
        Writeln('StatusMenu is here');

      If Debug Then
        Writeln('Waiting for StatusMenu to leave');

      If Not TabBackpack.waitSlotPixelChange(28,GaussRangeInt(25000, 45000)) Then
        Exit;

      If Debug Then
        Writeln('StatusMenu is gone');
      ItemCount := ItemCount + 28;
    End;
    'pots':
    Begin
      AntiB:= 3000;
      MouseB:= 6000;

      GetMousePOS(X,Y);
      If Slot = 0 Then
        Slot:=1;
      If Not PointInBox(Point(X,Y),TabBackpack.GetSlotBox(11)) And Not PointInBox(Point(X,Y),TabBackpack.GetSlotBox(12)) Then
      Begin
        Case Random(10) Of
          0..7: Slot:=11;
          8..9: Slot:=12;
        End;
      End;
      TabBackpack.MouseSlot(Slot, Mouse_Left);
      Wait(GaussRangeInt(0, 100));

      Case Random(10) Of
        0..7: Slot:=16;
        8..9: Slot:=17;
      End;

      TabBackpack.MouseSlot(Slot, Mouse_Left);
      Wait(GaussRangeInt(0, 200));

      T.Reset;
      T.Start;
      Time:=GaussRangeInt(6000, 12000);
      Repeat
        If Productionscreen.IsOpen Then
          Break;
        Wait(GaussRangeInt(0, 500));
        If (Not IsLoggedIn) Or (T.GetTime>Time) Then
          Exit;
      Until Productionscreen.IsOpen;

      Wait(GaussRangeInt(0, 400));

      If ItemType = '' Then
        ItemType:= Productionscreen.getSelectedBoxText;


      Productionscreen.ClickStart;


      If Not TabBackpack.WaitForShift(RandomRange(2000,4000)) Then
        Exit;

      Wait(GaussRangeInt(0, 1500));

      Timeout.Reset;
      Timeout.Start;

      T.Reset;
      T.Start;
      Time:=GaussRangeInt(25000, 45000);
      Repeat
        Wait(GaussRangeInt(0, 900));
        AntiBan;
        If (Not IsLoggedIn) Or (T.GetTime>Time) Then
          Exit;
      Until Not (TabBackpack.IsItemInSlot(28));

      ItemCount := ItemCount + 14;
    End;
    Else
    Begin
      Writeln('CleanOrPots type wrong, shutting down');
      TerminateScript;
    End;
  End;
  Result := True;
End;

Procedure Setup
Begin
  ClearDebug;
  disableSRLLog:=true;
  AutoUpdateMe;

  initPlayerForm(); // initiate your settings
  runPlayerForm();  // run the form

  // use this so the script doesn't continue if the user exits out of the form
  if (not playerForm.isScriptReady) then
    terminatescript;

  declarePlayers();

  SmartEnableDrawing := True;
  SRL_Events[EVENT_ANTIBAN] := @Antiban;
  smartPlugins := ['OpenGL32.dll','d3d9.dll'];
  SetupSRL;

  If Not IsLoggedIn Then
  Begin
    If Not Players[CurrentPlayer].Login Then
      TerminateScript;

    Writeln('Just loggedin, waiting a bit');
    Wait(RandomRange(6000,10000));
  End;

  If Not Debug Then
    DisableSRLDebug:=True else
    DisableSRLDebug:=false;
  ClearDebug;

  MainScreen.SetAngle(MS_ANGLE_HIGH);
  FindNormalRandoms;

  Timeout.Start;
  StackCheck:=1;

  Bir:= 13;      // ***Random minutes to add/subtract from how long until we break***
  Bfr:= 7;       // ***Random minutes to add/subjtract from break duraction***

  W := (Players[CurrentPlayer].Integers[0] * 60000);
  X := (Players[CurrentPlayer].Integers[1] * 60000);
  Y := RandomRange(-BIR * 60000, BIR * 60000);
  Z := RandomRange(-BFR * 60000, BFR * 60000);

  If conversationBox.continue(true, true) Then
    Wait(RandomRange(3000,2000));

  TabBackpack.Open;

  StartingXP:=ChatBox.GetXP;

  FindNormalRandoms;
End;

Procedure Mainloop;
Begin
  If Not IsLoggedIn Then
  Begin
    Wait(5000);
     If Not Players[CurrentPlayer].Login Then
        TerminateScript;
    MainScreen.SetAngle(MS_ANGLE_HIGH);
    Minimap.SetAngle(MM_DIRECTION_EAST);
    Timeout.Reset;
    Timeout.Start;
  End;

  If Banking Then
  Begin
    FindNormalRandoms;
    If MakeItems Then
    Begin
      ProgressReport;
      FindNormalRandoms;
    End;
  End;

  If Timeout.GetTime>300000 Then
  Begin
    Writeln('Nothing has happened for too long, shutting down!- took a screenshot, send pic to ashaman (in the logs folder)');
    SaveScreenshot(ScriptPath + timeRunning() + '_' + 'HerbFail.png');
    TerminateScript;
  End;

  If Players[CurrentPlayer].Booleans[0] Then
    BreakHandler(Players[CurrentPlayer].Integers[0],Players[CurrentPlayer].Integers[1],Bir,Bfr);
End;

Begin
  Setup;
  While (Players.GetActive() > 0) Do
    Mainloop;
End.
